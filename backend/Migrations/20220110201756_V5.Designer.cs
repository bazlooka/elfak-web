// <auto-generated />
using System;
using Agencija.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace backend.Migrations
{
    [DbContext(typeof(AgencijaContext))]
    [Migration("20220110201756_V5")]
    partial class V5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agencija.Models.Aktivnost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<float>("Honorar")
                        .HasColumnType("real");

                    b.Property<int?>("KrstarenjeID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("KrstarenjeID");

                    b.ToTable("Aktivnost");
                });

            modelBuilder.Entity("Agencija.Models.AngazovanSpoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanPosadeID")
                        .HasColumnType("int");

                    b.Property<float>("Honorar")
                        .HasColumnType("real");

                    b.Property<int>("KrstarenjeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClanPosadeID");

                    b.HasIndex("KrstarenjeID");

                    b.ToTable("AngazovanSpoj");
                });

            modelBuilder.Entity("Agencija.Models.ClanPosade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrLicence")
                        .HasColumnType("int");

                    b.Property<string>("Cin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("ClanPosade");
                });

            modelBuilder.Entity("Agencija.Models.Krstarenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KruzerID")
                        .HasColumnType("int");

                    b.Property<int?>("OdredisnaLukaID")
                        .HasColumnType("int");

                    b.Property<int?>("PolaznaLukaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KruzerID");

                    b.HasIndex("OdredisnaLukaID");

                    b.HasIndex("PolaznaLukaID");

                    b.ToTable("Krstarenje");
                });

            modelBuilder.Entity("Agencija.Models.KrstariSpoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KrstarenjeID")
                        .HasColumnType("int");

                    b.Property<int?>("PutnikID")
                        .HasColumnType("int");

                    b.Property<int?>("SobaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KrstarenjeID");

                    b.HasIndex("PutnikID");

                    b.HasIndex("SobaID");

                    b.ToTable("KrstariSpoj");
                });

            modelBuilder.Entity("Agencija.Models.Kruzer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojRedova")
                        .HasColumnType("int");

                    b.Property<int>("BrojSobaPoRedu")
                        .HasColumnType("int");

                    b.Property<string>("NazivBroda")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RegBroj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Kruzer");
                });

            modelBuilder.Entity("Agencija.Models.Luka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Drzava")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Grad")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<float>("VisinaTakse")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Luka");
                });

            modelBuilder.Entity("Agencija.Models.Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojPasosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("Agencija.Models.Soba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Broj")
                        .HasColumnType("int");

                    b.Property<float>("CenaNocenja")
                        .HasColumnType("real");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<int>("KruzerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KruzerID");

                    b.ToTable("Soba");
                });

            modelBuilder.Entity("AktivnostClanPosade", b =>
                {
                    b.Property<int>("AktivnostiID")
                        .HasColumnType("int");

                    b.Property<int>("ClanoviPosadeID")
                        .HasColumnType("int");

                    b.HasKey("AktivnostiID", "ClanoviPosadeID");

                    b.HasIndex("ClanoviPosadeID");

                    b.ToTable("AktivnostClanPosade");
                });

            modelBuilder.Entity("AktivnostPutnik", b =>
                {
                    b.Property<int>("AktivnostiID")
                        .HasColumnType("int");

                    b.Property<int>("PutinciID")
                        .HasColumnType("int");

                    b.HasKey("AktivnostiID", "PutinciID");

                    b.HasIndex("PutinciID");

                    b.ToTable("AktivnostPutnik");
                });

            modelBuilder.Entity("KrstarenjeLuka", b =>
                {
                    b.Property<int>("UsputnaLukaZaID")
                        .HasColumnType("int");

                    b.Property<int>("UsputneLukeID")
                        .HasColumnType("int");

                    b.HasKey("UsputnaLukaZaID", "UsputneLukeID");

                    b.HasIndex("UsputneLukeID");

                    b.ToTable("KrstarenjeLuka");
                });

            modelBuilder.Entity("Agencija.Models.Aktivnost", b =>
                {
                    b.HasOne("Agencija.Models.Krstarenje", "Krstarenje")
                        .WithMany("Aktivnosti")
                        .HasForeignKey("KrstarenjeID");

                    b.Navigation("Krstarenje");
                });

            modelBuilder.Entity("Agencija.Models.AngazovanSpoj", b =>
                {
                    b.HasOne("Agencija.Models.ClanPosade", "ClanPosade")
                        .WithMany("AngazovanNa")
                        .HasForeignKey("ClanPosadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agencija.Models.Krstarenje", "Krstarenje")
                        .WithMany("ClanoviPosade")
                        .HasForeignKey("KrstarenjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClanPosade");

                    b.Navigation("Krstarenje");
                });

            modelBuilder.Entity("Agencija.Models.Krstarenje", b =>
                {
                    b.HasOne("Agencija.Models.Kruzer", "Kruzer")
                        .WithMany("Krstarenja")
                        .HasForeignKey("KruzerID");

                    b.HasOne("Agencija.Models.Luka", "OdredisnaLuka")
                        .WithMany("OdredisnaLukaZa")
                        .HasForeignKey("OdredisnaLukaID");

                    b.HasOne("Agencija.Models.Luka", "PolaznaLuka")
                        .WithMany("PolaznaLukaZa")
                        .HasForeignKey("PolaznaLukaID");

                    b.Navigation("Kruzer");

                    b.Navigation("OdredisnaLuka");

                    b.Navigation("PolaznaLuka");
                });

            modelBuilder.Entity("Agencija.Models.KrstariSpoj", b =>
                {
                    b.HasOne("Agencija.Models.Krstarenje", "Krstarenje")
                        .WithMany("KrstariSpojevi")
                        .HasForeignKey("KrstarenjeID");

                    b.HasOne("Agencija.Models.Putnik", "Putnik")
                        .WithMany("KrstariSpoj")
                        .HasForeignKey("PutnikID");

                    b.HasOne("Agencija.Models.Soba", "Soba")
                        .WithMany("KrstariSpoj")
                        .HasForeignKey("SobaID");

                    b.Navigation("Krstarenje");

                    b.Navigation("Putnik");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("Agencija.Models.Soba", b =>
                {
                    b.HasOne("Agencija.Models.Kruzer", "Kruzer")
                        .WithMany("Sobe")
                        .HasForeignKey("KruzerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kruzer");
                });

            modelBuilder.Entity("AktivnostClanPosade", b =>
                {
                    b.HasOne("Agencija.Models.Aktivnost", null)
                        .WithMany()
                        .HasForeignKey("AktivnostiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agencija.Models.ClanPosade", null)
                        .WithMany()
                        .HasForeignKey("ClanoviPosadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AktivnostPutnik", b =>
                {
                    b.HasOne("Agencija.Models.Aktivnost", null)
                        .WithMany()
                        .HasForeignKey("AktivnostiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agencija.Models.Putnik", null)
                        .WithMany()
                        .HasForeignKey("PutinciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KrstarenjeLuka", b =>
                {
                    b.HasOne("Agencija.Models.Krstarenje", null)
                        .WithMany()
                        .HasForeignKey("UsputnaLukaZaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agencija.Models.Luka", null)
                        .WithMany()
                        .HasForeignKey("UsputneLukeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agencija.Models.ClanPosade", b =>
                {
                    b.Navigation("AngazovanNa");
                });

            modelBuilder.Entity("Agencija.Models.Krstarenje", b =>
                {
                    b.Navigation("Aktivnosti");

                    b.Navigation("ClanoviPosade");

                    b.Navigation("KrstariSpojevi");
                });

            modelBuilder.Entity("Agencija.Models.Kruzer", b =>
                {
                    b.Navigation("Krstarenja");

                    b.Navigation("Sobe");
                });

            modelBuilder.Entity("Agencija.Models.Luka", b =>
                {
                    b.Navigation("OdredisnaLukaZa");

                    b.Navigation("PolaznaLukaZa");
                });

            modelBuilder.Entity("Agencija.Models.Putnik", b =>
                {
                    b.Navigation("KrstariSpoj");
                });

            modelBuilder.Entity("Agencija.Models.Soba", b =>
                {
                    b.Navigation("KrstariSpoj");
                });
#pragma warning restore 612, 618
        }
    }
}
